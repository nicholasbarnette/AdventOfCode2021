import unittest
from Grid import Grid

# python -m unittest test_grid


class TestGrid(unittest.TestCase):

    def test_grid_init(self):
        g = Grid(['5', '4', '8', '3', '1', '4', '3', '2', '2', '3', '2', '7', '4', '5', '8', '5', '4', '7', '1', '1', '5', '2', '6', '4', '5', '5', '6', '1', '7', '3', '6', '1', '4', '1', '3', '3', '6', '1', '4', '6', '6', '3', '5', '7', '3', '8', '5', '4', '7',
                 '8', '4', '1', '6', '7', '5', '2', '4', '6', '4', '5', '2', '1', '7', '6', '8', '4', '1', '7', '2', '1', '6', '8', '8', '2', '8', '8', '1', '1', '3', '4', '4', '8', '4', '6', '8', '4', '8', '5', '5', '4', '5', '2', '8', '3', '7', '5', '1', '5', '2', '6'])
        self.assertEqual(str(
            g), '5483143223\n2745854711\n5264556173\n6141336146\n6357385478\n4167524645\n2176841721\n6882881134\n4846848554\n5283751526\n')

    def test_grid_step(self):
        g = Grid(['5', '4', '8', '3', '1', '4', '3', '2', '2', '3', '2', '7', '4', '5', '8', '5', '4', '7', '1', '1', '5', '2', '6', '4', '5', '5', '6', '1', '7', '3', '6', '1', '4', '1', '3', '3', '6', '1', '4', '6', '6', '3', '5', '7', '3', '8', '5', '4', '7',
                 '8', '4', '1', '6', '7', '5', '2', '4', '6', '4', '5', '2', '1', '7', '6', '8', '4', '1', '7', '2', '1', '6', '8', '8', '2', '8', '8', '1', '1', '3', '4', '4', '8', '4', '6', '8', '4', '8', '5', '5', '4', '5', '2', '8', '3', '7', '5', '1', '5', '2', '6'])
        g.step()
        self.assertEqual(g.get_steps(), 1)
        self.assertEqual(g.get_flashes(), 0)
        self.assertEqual(str(
            g), '6594254334\n3856965822\n6375667284\n7252447257\n7468496589\n5278635756\n3287952832\n7993992245\n5957959665\n6394862637\n')
        g.step()
        self.assertEqual(g.get_steps(), 2)
        self.assertEqual(g.get_flashes(), 35)
        self.assertEqual(str(
            g), '8807476555\n5089087054\n8597889608\n8485769600\n8700908800\n6600088989\n6800005943\n0000007456\n9000000876\n8700006848\n')

    def test_grid_many_steps(self):
        g = Grid(['5', '4', '8', '3', '1', '4', '3', '2', '2', '3', '2', '7', '4', '5', '8', '5', '4', '7', '1', '1', '5', '2', '6', '4', '5', '5', '6', '1', '7', '3', '6', '1', '4', '1', '3', '3', '6', '1', '4', '6', '6', '3', '5', '7', '3', '8', '5', '4', '7',
                 '8', '4', '1', '6', '7', '5', '2', '4', '6', '4', '5', '2', '1', '7', '6', '8', '4', '1', '7', '2', '1', '6', '8', '8', '2', '8', '8', '1', '1', '3', '4', '4', '8', '4', '6', '8', '4', '8', '5', '5', '4', '5', '2', '8', '3', '7', '5', '1', '5', '2', '6'])
        for _ in range(100):
            g.step()
        self.assertEqual(g.get_steps(), 100)
        self.assertEqual(g.get_flashes(), 1656)
        self.assertEqual(str(
            g), '0397666866\n0749766918\n0053976933\n0004297822\n0004229892\n0053222877\n0532222966\n9322228966\n7922286866\n6789998766\n')


if __name__ == '__main__':
    unittest.main()
